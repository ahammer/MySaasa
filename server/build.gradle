plugins {
    id "com.jfrog.bintray" version "1.7"
}


apply plugin: 'java'
apply plugin: 'com.diffplug.gradle.spotless'
apply plugin: 'application'
apply plugin: "jacoco"
apply plugin: 'maven'
apply plugin: 'maven-publish'

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination = "${buildDir}/jacocoHtml"
    }
}
mainClassName = "com.mysaasa.MySaasaDaemon"


def Properties versionProps = new Properties()

def versionPropsFile = file('version.properties')
if(versionPropsFile.exists())
    versionProps.load(new FileInputStream(versionPropsFile))
def code = (versionProps['VERSION_CODE'] ?: "0").toInteger() + 1
versionProps['VERSION_CODE'] = code.toString()
versionProps.store(versionPropsFile.newWriter(), null)


group = 'com.mysaasa'
version = '0.5.'+versionProps['VERSION_CODE']
description = """mysaasa Server"""

spotless {
    java {
        eclipseFormatFile 'spotless.eclipseformat.xml'  // XML file dumped out by the Eclipse formatter
    }
}


compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs << '-parameters'
    options.fork = true
    options.forkOptions.executable = 'javac'
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    //Keeps the Param Names
    options.compilerArgs << '-parameters'
    options.fork = true
    options.forkOptions.executable = 'javac'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/java'
            srcDig 'src/main/webapp'
        }
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.jfrog.org/artifactory/plugins-releases"}
    maven { url "http://mvnrepository.com"}
}

dependencies {
    compile project(':base')
    compile 'org.eclipse.jetty.aggregate:jetty-all:9.4.8.v20171121'
    compile 'org.eclipse.jetty.websocket:websocket-server:9.4.8.v20171121'
    compile 'javax.websocket:javax.websocket-api:1.1'
    compile 'org.reflections:reflections:0.9.11'
    compile 'org.apache.velocity:velocity:1.7'
    compile 'com.google.inject:guice:3.0'
    compile 'com.google.guava:guava:24.1-jre'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.h2database:h2:1.4.196'
    compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    compile 'net.lingala.zip4j:zip4j:1.3.2'
    compile 'net.glxn:qrgen:1.4'
    compile 'com.googlecode.json-simple:json-simple:1.1'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-daemon:commons-daemon:1.0.15'
    compile 'org.shredzone.acme4j:acme4j-client:0.14'
    compile 'org.shredzone.acme4j:acme4j-utils:0.14'
    testCompile 'junit:junit:4.10'
}


//Publishing
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives sourcesJar
    archives javadocJar
}

def projectUrl = 'https://github.com/ahammer/MySaasa'

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'maven'
        name = 'MySaasa-Server'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/ahammer/MySaasa.git'
        version {
            name = rootProject.mavenVersion
            desc = 'Used Util Beta'
            released = new Date()
            gpg {
                sign = true
                passphrase = System.getenv('BINTRAY_GPG_PASSPHRASE')
            }
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'MySaasa-Server'
                    description 'MySaasa Server'
                    url projectUrl
                    scm {
                        url projectUrl
                        connection projectUrl
                        developerConnection projectUrl
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'AdamHammer'
                            name 'Adam Hammer'
                            email 'adamhammer2@gmail.com'
                        }
                    }
                }
            }

            from components.java
            groupId 'com.mysaasa'
            artifactId 'MySaasa-Server'
            version rootProject.mavenVersion
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier = 'javadoc'
            }
        }

    }
}
